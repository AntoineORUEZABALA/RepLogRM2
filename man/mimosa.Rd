% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mimosa-package.R
\docType{package}
\name{mimosa}
\alias{mimosa-package}
\alias{mimosa}
\title{Mimosa: A Logistic Regression and Preprocessing Package}
\description{
\strong{Mimosa} is a package designed for logistic regression and comprehensive data preprocessing.
It includes tools for binary and multinomial logistic regression, as well as a full pipeline
for handling missing data, encoding categorical variables, and normalizing numerical variables.
}
\section{Key Features}{

\itemize{
\item \strong{Logistic Regression}: Train and evaluate binary or multinomial logistic regression models
with L1/L2 regularization and gradient descent.
\item \strong{Data Preprocessing}: Functions for imputing missing values, one-hot encoding categorical variables,
and normalizing numerical data.
\item \strong{Preprocessing Pipeline}: An all-in-one function for preparing datasets for machine learning.
}
}

\section{Core Functions}{

\itemize{
\item \strong{Logistic Regression Class}:
\itemize{
\item \code{LogisticRegression}: An R6 class for creating and training logistic regression models.
\item Methods include \code{fit}, \code{predict}, \code{predict_proba}, and performance metrics such as \code{precision},
\code{recall}, \code{f1_score}.
}
\item \strong{Data Preprocessing}:
\itemize{
\item \code{imputer_numeriques}: Impute missing values for numerical variables using mean or median.
\item \code{imputer_categorielles}: Impute missing values for categorical variables using the mode.
\item \code{split_train_test}: Split datasets into training and testing sets.
\item \code{encoder_one_hot}: Perform one-hot encoding for categorical variables.
\item \code{normaliser_donnees}: Normalize numerical variables.
\item \code{pretraitement_complet}: Perform complete preprocessing, including imputation, encoding, and normalization.
}
}
}

\examples{
library(mimosa)

# Preprocessing example
data <- data.frame(
  Age = c(25, 30, NA, 40),
  Gender = c("M", "F", "M", NA),
  Salary = c(50000, 60000, 55000, NA),
  Target = c(1, 0, 1, 0)
)

processed_data <- pretraitement_complet(data, cible = "Target")
print(processed_data)

# Logistic Regression example
model <- LogisticRegression$new(learning_rate = 0.01, max_iter = 500)
model$fit(processed_data[, -4], processed_data$Target)
predictions <- model$predict(processed_data[, -4])
print(predictions)

}
\author{
\strong{Maintainer}: Linh Nhi LE DINH \email{linh-nhi.le-dinh@univ-lyon2.fr}

Authors:
\itemize{
  \item Beranger THOMAS \email{beranger.thomas@univ-lyon2.fr}
  \item Antoine ORUEZABALA \email{antoine.oruezabala@univ-lyon2.fr}
}

}
\keyword{internal}
